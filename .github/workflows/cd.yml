name: Building CAR File

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      # 1. Checkout code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. Set up JDK & Maven
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      # 3. Build CAR
      - name: Build CAR
        run: mvn clean package
        # Assumes pom.xml is in root; add working-directory if in a subdirectory

      # 4. Locate and copy CAR file
      - name: CAR File Location
        run: |
          echo "Listing target directory:"
          ls -la ${{ github.workspace }}/target/
          echo "Searching for CAR file:"
          find ${{ github.workspace }} -type f -name "*.car"
          CAR_FILE=$(find ${{ github.workspace }} -type f -name "*.car" | head -n 1)
          if [ -z "$CAR_FILE" ]; then
            echo "Error: No CAR file found"
            exit 1
          fi
          echo "CAR file found: $CAR_FILE"
          echo "Checking CAR file contents:"
          unzip -l "$CAR_FILE"
          echo "Copying CAR file to deployment/docker/CompositeApps/"
          mkdir -p ${{ github.workspace }}/deployment/docker/CompositeApps
          cp "$CAR_FILE" ${{ github.workspace }}/deployment/docker/CompositeApps/
          ls -la ${{ github.workspace }}/deployment/docker/CompositeApps/

      # 5. Build Docker Image
      - name: Build Docker Image
        run: |
         echo "Building Docker image..."
         docker build -t helloworldservice:1.0.0 -f ${{ github.workspace }}/deployment/docker/Dockerfile ${{ github.workspace }}
         echo "Listing built images:"
         docker images | grep helloworldservice


      # 6. Test CAR File in Custom Image
      - name: Test CAR File in Custom Image
        run: |
          echo "Running custom Docker image..."
          docker run -d --name helloworldservice-test -p 8290:8290 -p 9164:9164 ${{ env.DOCKER_IMAGE_TAG }}
          echo "Waiting for WSO2 MI server to start..."
          for i in {1..90}; do
            if curl -k -s https://localhost:9164/management/health > /dev/null; then
              echo "Server is up!"
              break
            fi
            echo "Waiting... ($i/90)"
            sleep 5
          done
          if [ $i -eq 90 ]; then
            echo "Error: WSO2 MI server did not start"
            docker logs helloworldservice-test
            exit 1
          fi
          echo "Checking WSO2 home directory structure..."
          docker exec helloworldservice-test find /home/wso2carbon -type d
          echo "Checking for CAR files in container..."
          docker exec helloworldservice-test find /home/wso2carbon -type f -name "*.car"
          echo "Checking carbonapps directory in container..."
          docker exec helloworldservice-test ls -la ${{ env.WSO2_SERVER_HOME }}/repository/deployment/server/carbonapps || echo "carbonapps directory not found"
          echo "Checking file permissions in container..."
          docker exec helloworldservice-test stat ${{ env.WSO2_SERVER_HOME }}/repository/deployment/server/carbonapps/*.car || echo "No CAR files found"
          echo "Checking server logs..."
          docker logs helloworldservice-test
          echo "Checking CAR deployment..."
          docker logs helloworldservice-test | grep "Deploying Carbon Application" || echo "No deployment message found"
          echo

      # 7. Upload CAR artifact
      - name: Upload CAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: car-artifact
          path: target/*.car
          retention-days: 7